<?php

namespace api\modules\v1\controllers;

use common\models\User;
use Yii;
use yii\filters\auth\HttpBasicAuth;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use yii\rest\ActiveController;

class UserController extends ActiveController
{

    public $modelClass = 'api\modules\v1\models\User';

    /*public function actionIndex()
    {
        return $this->render('index');
    }*/

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator']=[
            'class' => HttpBasicAuth::className(),
            /*'compositeAuth' => [
                'class' => CompositeAuth::className(),
                    'authMethods' => [
                        HttpBasicAuth::className(),
                        QueryParamAuth::className(),
                    ],
            ],*/
            'auth' => function($username, $password)
            {
                $user = \api\modules\v1\models\User::findByUsername($username);
                if($user && $user->validatePassword($password))
                {
                    return $user;
                }
            }
        ];
        return $behaviors; // TODO: Change the autogenerated stub
    }


    public function actionLogin(){
        $user = User::findByUsername(Yii::$app->request->post('username'));
        if($user->validatePassword(Yii::$app->request->post('password'))){
            return $user;
        }
        return [false];
    }

    public function actionRegisto(){

        $user= Yii::$app->request->post('user');

       /* $user->username = $this->username;
        $user->nome = $this->nome;
        $user->dataNascimento = $this->dataNascimento;
        $user->email = $this->email;
        $user->nacionalidade = $this->nacionalidade;*/
        $user->setPassword($user->password);
        $user->generateAuthKey();
        $user->save(false);

        $auth = \Yii::$app->authManager;
        $regularRole = $auth->getRole('regular');
        $auth->assign($regularRole, $user->getId());

        return $user;

    }

}
